import os
import logging
import uuid
from telegram import Update
from telegram.ext import ApplicationBuilder, MessageHandler, CommandHandler, filters, ContextTypes
from ffmpeg_command import run_ffmpeg

BOT_TOKEN = os.getenv("BOT_TOKEN")
logging.basicConfig(level=logging.INFO)
user_videos = {}

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    await update.message.reply_text(
        "üëã ‡¶∏‡ßç‡¶¨‡¶æ‡¶ó‡¶§‡¶Æ!\n"
        "‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶®:\n"
        "‡ßßÔ∏è‚É£ ‡¶è‡¶ï‡¶ü‡¶ø ‡¶∏‡¶æ‡¶ß‡¶æ‡¶∞‡¶£ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì\n"
        "‡ß®Ô∏è‚É£ ‡¶è‡¶ï‡¶ü‡¶ø '‡¶Æ‡¶æ‡¶á ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì'\n\n"
        "‡¶¶‡ßÅ‡¶ü‡¶ø ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶Ü‡¶∏‡¶æ‡¶∞ ‡¶™‡¶∞ ‡¶Ü‡¶Æ‡¶ø ‡¶Ö‡¶ü‡ßã‡¶Æ‡ßá‡¶ü‡¶ø‡¶ï ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡ßá ‡¶™‡¶æ‡¶†‡¶ø‡ßü‡ßá ‡¶¶‡¶ø‡¶¨‡ßã ‚ú®"
    )

async def handle_video(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    file = update.message.video or update.message.document
    if not file:
        await update.message.reply_text("‚ö†Ô∏è ‡¶¶‡ßü‡¶æ ‡¶ï‡¶∞‡ßá ‡¶è‡¶ï‡¶ü‡¶ø ‡¶¨‡ßà‡¶ß ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡¶æ‡¶†‡¶æ‡¶®‡•§")
        return

    file_id = str(uuid.uuid4())[:8]
    file_path = f"{user_id}_{file_id}.mp4"
    new_file = await file.get_file()
    await new_file.download_to_drive(file_path)

    user_videos.setdefault(user_id, []).append(file_path)

    if len(user_videos[user_id]) == 2:
        await update.message.reply_text("‚è≥ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶ï‡¶∞‡¶æ ‡¶π‡¶ö‡ßç‡¶õ‡ßá, ‡¶Ö‡¶®‡ßÅ‡¶ó‡ßç‡¶∞‡¶π ‡¶ï‡¶∞‡ßá ‡¶Ö‡¶™‡ßá‡¶ï‡ßç‡¶∑‡¶æ ‡¶ï‡¶∞‡ßÅ‡¶®...")
        input1, input2 = user_videos[user_id]
        output_path = f"{user_id}_output.mp4"
        try:
            run_ffmpeg(input1, input2, output_path)
            await update.message.reply_text("‚úÖ ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏ ‡¶∏‡¶Æ‡ßç‡¶™‡¶®‡ßç‡¶®!")
            await update.message.reply_video(video=open(output_path, 'rb'))
        except Exception as e:
            await update.message.reply_text(f"‚ùå ‡¶∏‡¶Æ‡¶∏‡ßç‡¶Ø‡¶æ ‡¶π‡ßü‡ßá‡¶õ‡ßá: {e}")
        finally:
            for path in user_videos[user_id]:
                if os.path.exists(path):
                    os.remove(path)
            if os.path.exists(output_path):
                os.remove(output_path)
            user_videos[user_id] = []
    else:
        await update.message.reply_text("üì• ‡¶è‡¶ï‡¶ü‡¶ø ‡¶≠‡¶ø‡¶°‡¶ø‡¶ì ‡¶™‡ßá‡ßü‡ßá‡¶õ‡¶ø! ‡¶è‡¶ñ‡¶® ‡¶Ü‡¶∞‡ßá‡¶ï‡¶ü‡¶ø ‡¶™‡¶æ‡¶†‡¶æ‡¶® ‡¶™‡ßç‡¶∞‡¶∏‡ßá‡¶∏‡¶ø‡¶Ç ‡¶∂‡ßÅ‡¶∞‡ßÅ ‡¶ï‡¶∞‡¶æ‡¶∞ ‡¶ú‡¶®‡ßç‡¶Ø‡•§")

app = ApplicationBuilder().token(BOT_TOKEN).build()
app.add_handler(CommandHandler("start", start))
app.add_handler(MessageHandler(filters.VIDEO | filters.Document.VIDEO, handle_video))

if __name__ == "__main__":
    app.run_polling()
